#!/bin/bash

[ -d $HOME/bin ] || mkdir $HOME/bin
[ -d $HOME/obin ] || mkdir $HOME/obin

if ! [ -x "$(command -v wget)" ]; then
  echo 'Error: wget is not installed.' >&2
  exit 1
fi

if ! [ -x "$(command -v unzip)" ]; then
  echo 'Error: unzip is not installed.' >&2
  exit 1
fi

if ! [ -x "$(command -v npm)" ]; then
  echo 'Error: npm is not installed.' >&2
  exit 1
fi

if ! [ -x "$(command -v composer)" ]; then
  . $HOME/.dotfiles/bin/install_composer
fi

composer global config -q minimum-stability dev
composer global config -q prefer-stable true

function install_composer_dep() {
  package_name=$1
  composer global show -D 2>/dev/null | grep -q ^$package_name
  package_installed=$?

  if [ $package_installed -eq 1 ]; then
    echo "Installing $package_name..."
    composer global require $package_name
  else
    echo "Already installed: $package_name"
  fi
}

function install_npm_dep() {
  package_name=$1
  npm list --depth 0 -g $package_name >/dev/null
  package_installed=$?

  if [ $package_installed -eq 1 ]; then
    echo "Installing $package_name..."
    npm install -g $package_name
  else
    echo "Already installed: $package_name"
  fi
}

install_composer_dep psy/psysh
install_composer_dep phpstan/phpstan
install_composer_dep squizlabs/php_codesniffer
#install_composer_dep felixfbecker/language-server
#install_composer_dep phpactor/phpactor

# Download PHP manual stubs for PsySH
php_docs_db_dir=$HOME/.local/share/psysh
php_docs_db_path=$php_docs_db_dir/php_manual.sqlite

if ! [ -f $php_docs_db_path ]; then
  mkdir -p $php_docs_db_dir
  wget -O $php_docs_db_path http://psysh.org/manual/en/php_manual.sqlite
fi

# Parse stubs for PHP Language Server
#composer run-script --working-dir=$HOME/.config/composer/vendor/felixfbecker/language-server/ parse-stubs

install_npm_dep eslint
install_npm_dep jsonlint
install_npm_dep stylelint
